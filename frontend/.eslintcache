[{"/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/index.js":"1","/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/App.js":"2","/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/data.js":"3","/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/tables/UserTable.jsx":"4","/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/forms/AddUserForm.jsx":"5","/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/forms/EditUserForm.jsx":"6"},{"size":221,"mtime":1612004655324,"results":"7","hashOfConfig":"8"},{"size":2575,"mtime":1612139861864,"results":"9","hashOfConfig":"8"},{"size":474,"mtime":1612007754640,"results":"10","hashOfConfig":"8"},{"size":2252,"mtime":1612135471765,"results":"11","hashOfConfig":"8"},{"size":3567,"mtime":1612121606924,"results":"12","hashOfConfig":"8"},{"size":1994,"mtime":1612103640785,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rfmpt6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/index.js",[],["29","30"],"/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/App.js",["31"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Nav, Navbar, Button, Form, FormControl } from 'react-bootstrap';\n\nimport React, { useState } from \"react\";\nimport userList from \"./data.js\";\nimport UserTable from \"./tables/UserTable\";\nimport AddUserForm from \"./forms/AddUserForm\";\nimport EditUserForm from \"./forms/EditUserForm\";\n\nimport axios from \"axios\";\n\n\n\nconst App = () => {\n  const [users, setUsers] = useState(userList);\n\n  const addUser = (user) => {\n    user.id = users.length + 1;\n    setUsers([...users, user]);\n  };\n\n  const deleteUser = (id) => {\n    setUsers(users.filter((user) => user.id !== id));\n  };\n\n  const [editing, setEditing] = useState(false);\n\n  const initialUser = { id: null, nome: \"\", sobrenome: \"\", idade: \"\", estadoCivil: \"\", cpf: \"\", cidade: \"\", estado: \"\" };\n\n  const [currentUser, setCurrentUser] = useState(initialUser);\n\n  const editUser = (id, user) => {\n    setEditing(true);\n    setCurrentUser(user);\n  };\n\n  const updateUser = (newUser) => {\n    setUsers(\n      users.map((user) => (user.id === currentUser.id ? newUser : user))\n    );\n    setCurrentUser(initialUser);\n    setEditing(false);\n  };\n\n  return (\n    <>\n      <Navbar bg=\"light\" variant=\"light\">\n        <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          <Nav.Link href=\"#features\">Features</Nav.Link>\n          <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n        </Nav>\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-primary\">Search</Button>\n        </Form>\n      </Navbar>\n\n      <div className=\"container\">\n        <h1>Processo Seletivo | Softwrap</h1>\n        <div className=\"row\">\n          <div className=\"five columns\">\n            {editing ? (\n              <div>\n                <h2>Edit user</h2>\n                <EditUserForm\n                  currentUser={currentUser}\n                  setEditing={setEditing}\n                  updateUser={updateUser}\n                />\n              </div>\n            ) : (\n                <div>\n                  <h2>Add user</h2>\n                  <AddUserForm addUser={addUser} />\n                </div>\n              )}\n          </div>\n          <div className=\"seven columns\">\n            <h2>View users</h2>\n            <UserTable\n              users={users}\n              deleteUser={deleteUser}\n              editUser={editUser}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/data.js",[],"/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/tables/UserTable.jsx",[],"/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/forms/AddUserForm.jsx",[],"/home/nishimura/Repository/Processos Seletivos/Processo-Seletivo_Softwrap/frontend/src/forms/EditUserForm.jsx",["32","33","34","35"],"import React, {useState, useEffect} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Button, Form, Col } from 'react-bootstrap';\n\nconst EditUserForm = (props) => {\n\n    useEffect(() => {\n        setUser(props.currentUser)\n    }, [props])\n\n    const [user, setUser] = useState(props.currentUser);\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setUser({...user, [name]: value});\n        }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (user.name && user.sobrenome) props.updateUser(user);\n    }\n\n    return (\n        <form>\n            <label>Nome</label>\n            <input className=\"u-full-width\" type=\"text\" value={user.name} name=\"name\" onChange={handleChange} />\n            \n            <label>Sobrenome</label>\n            <input className=\"u-full-width\" type=\"text\" value={user.sobrenome} name=\"sobrenome\" onChange={handleChange} />\n            \n            <label>Idade</label>\n            <input className=\"u-full-width\" type=\"text\" value={user.idade} name=\"idade\" onChange={handleChange} />\n            \n            <label>CPF</label>\n            <input className=\"u-full-width\" type=\"text\" value={user.cpf} name=\"cpf\" onChange={handleChange} />\n            \n            <label>Estado Civil</label>\n            <input className=\"u-full-width\" type=\"text\" value={user.estadoCivil} name=\"estadoCivil\" onChange={handleChange} />\n            \n            <label>Cidade</label>\n            <input className=\"u-full-width\" type=\"text\" value={user.cidade} name=\"cidade\" onChange={handleChange} />\n\n            <label>Estado</label>\n            <input className=\"u-full-width\" type=\"text\" value={user.estado} name=\"estado\" onChange={handleChange} />\n\n            <button className=\"button-primary\" type=\"submit\" onClick={handleSubmit} >Edit user</button>\n            <button type=\"submit\" onClick={() => props.setEditing(false)} >Cancel</button>\n        </form>\n    )\n}\n\nexport default EditUserForm;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":10,"column":8,"nodeType":"42","messageId":"43","endLine":10,"endColumn":13},{"ruleId":"40","severity":1,"message":"44","line":3,"column":10,"nodeType":"42","messageId":"43","endLine":3,"endColumn":19},{"ruleId":"40","severity":1,"message":"45","line":3,"column":21,"nodeType":"42","messageId":"43","endLine":3,"endColumn":27},{"ruleId":"40","severity":1,"message":"46","line":3,"column":29,"nodeType":"42","messageId":"43","endLine":3,"endColumn":33},{"ruleId":"40","severity":1,"message":"47","line":3,"column":35,"nodeType":"42","messageId":"43","endLine":3,"endColumn":38},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]